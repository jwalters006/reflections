How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The diff allowed me to pinpoint the parts of the code where the potential
	error was residing.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can recover from errors made in the changing of code, particulary changes
	made by mistake.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The pros of manually choosing when to create a commit include the flexibility
	and control that the programmer has over the revision process.  The commits can
	be seperated in a logical way.  This can facilitate better organization of the 
	commit history.
	
	The cons of this approach include the capacity for user error to occur, possibly
	manifested by overly-large commits or the inadvertent creation of bad code during 
	the revision process that is difficult to detect.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Fill in your answer here

How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
